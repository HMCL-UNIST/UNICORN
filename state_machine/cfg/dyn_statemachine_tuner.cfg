#!/usr/bin/env python3
PACKAGE = "state_machine"
import rospkg
import yaml, os
from dynamic_reconfigure.parameter_generator_catkin import *

ros_path = rospkg.RosPack().get_path('state_machine')


gen = ParameterGenerator()
gen.add("save_params", bool_t, 1, "Save params", False)

gen.add("save_start_traj", bool_t, 1, "save_start_traj", False)
gen.add("start_target_m", double_t, 1, "start_target_m", 1.0, 0.1, 30.0)

gen.add("overtaking_ttl_sec", double_t, 0, "overtaking_ttl_sec", 3.0, 0.0, 10.0)

gen.add("lateral_width_gb_m", double_t, 0, "Threshold to raceline for GB_FREE in meters", 0.25, 0.1, 1.75)
gen.add("lateral_width_ot_m", double_t, 0, "Threshold to raceline for O_FREE in meters", 0.3, 0.1, 1.75)

gen.add("splini_hyst_timer_sec", double_t, 0, "Time that how often refresh the Overtaking waypoints", 0.2, 0.1, 1.5)
gen.add("splini_ttl", int_t, 0, "Spliner ttl caching in seconds", 2, 0, 5)
gen.add("pred_splini_ttl", double_t, 0, "Predictive spliner ttl caching in seconds", 0.2, 0.0, 5.0)
gen.add("emergency_break_horizon", double_t, 0, "Distance to obstacle at which emergency break is triggered in meters", 1.1, 0.1, 2.0)

gen.add("ftg_speed_mps", double_t, 0, "Treshold speed at which ftg counter is incremented in mps", 1.0, 0.1, 2.0)
gen.add("ftg_timer_sec", double_t, 0, "Treshold time at which ftg is triggered in seconds", 3.0, 0.5, 7.0)

gen.add("ftg_active", bool_t, 0, "Toggle ftg active", False)

gen.add("force_GBTRACK", bool_t, 0, "Toggle to GB TRACK state", False)

gen.add("use_force_trailing", bool_t, 0, "use trailing topic from predictive spilner for accumulation for opponent car data ", False)

exit(gen.generate(PACKAGE, "state_machinedynamic_tuner", "dyn_statemachine_tuner"))

